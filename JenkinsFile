// Deploy Pipeline to CloudHub

// Update line 56 with GIT's credentials ID from Jenkins
// Update line 81 with Maven settings.xml file ID defined with the Jenkins Config File Provider Plugin
// Update cient.id and client.secret values at line 91 & 92

def logSeparator = "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

def log(String message)
{
    echo "++++++++++++++++++++++++++ [ ${message} ]"
}

def getEnvName(branchName) {
    //echo "BRANCH NAME " + branchName
    if("test" == branchName) {
        return "-test-";
    } else if ("master" == branchName) {
        return "-";
    } else {
        return "-dev-";
    }
}

pipeline {
    agent any
    parameters {
      string    name: 'applicationName',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'assetVersion',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'muleEnv',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'cloudHubEnv',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'rtmVersion',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'muleRegion',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'workerCount',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'workerType',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'muleBusinessGroup',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'gitUrl',    defaultValue: '',   trim: true, description: 'This field is required.'
      string    name: 'gitBranchName',    defaultValue: '',   trim: true, description: 'This field is required.'
    }

    environment {
        BUILD_VERSION = "build.${currentBuild.number}"
        ANYPOINT_PLATFORM_CREDS = credentials('anypoint.platform.account')
        ASSET_VERSION = "v1"
        FQDN_ENV_NAME = getEnvName("${gitBranchName}")
    }

    stages {
        stage('Setup Build'){
            steps {
            	log("Checking out branch [${gitBranchName}] for [${applicationName}]")
                
                checkout([$class: 'GitSCM',
                    branches: [[name: "*/${gitBranchName}" ]],
                    userRemoteConfigs: [[
                        url: "${gitUrl}",
                        credentialsId: 'username'   // changeit
                    ]]
                ])

                sh "ls -lart ./*"       // Optionnal
                echo logSeparator
            }
        }
    

        stage('Deploy CloudHub') { 
          //environment {
          //  ANYPOINT_CREDENTIALS = credentials('anypoint.credentials')
          //}
          steps {

            script {
                log( "Starting Deployment to ${cloudhubEnv}" )
                def pom = readMavenPom file: 'pom.xml'
                log( "POM artifactId : ${pom.artifactId}" )
                log( "POM version: ${pom.version}" )
                withMaven(
                    // Default Maven installation declared in the Jenkins "Global Tool Configuration"
                    maven: 'Maven-3.8.4',
                    // Maven settings.xml file defined with the Jenkins Config File Provider Plugin
                    mavenSettingsConfig: '47d523ed-f17a-4fcc-a23a-1c73b60be27f') {
                        sh """ mvn --batch-mode clean package mule:deploy -P cloudhub \
                                -Dmule.env=${muleEnv} \
                                -Dmule.runtime.version=${rtmVersion} \
                                -Danypoint.connectedApp.clientId=$ANYPOINT_PLATFORM_CREDS_USR \
                                -Danypoint.connectedApp.clientSecret=$ANYPOINT_PLATFORM_CREDS_PSW \
                                -Dcloudhub.application.name=${pom.artifactId}${FQDN_ENV_NAME}$assetVersion \
                                -Dcloudhub.environment=${cloudHubEnv} \
                                -Danypoint.account.businessGroupId=${muleBusinessGroup} \
                                -Dcloudhub.workers=${workerCount} \
                                -Dcloudhub.worker.type=${workerType} \
                                -Dcloudhub.region=${muleRegion} \
                                -Danypoint.platform.client.id=2570fdb8edd747fdb0f2a6631b4ea8ce \
                                -Danypoint.platform.client.secret=632729308B58471085DfD836d1E03112 """
                }
                log( "Deployment to ${cloudHubEnv} completed: ${currentBuild.currentResult}" )
                echo logSeparator
            }

            
          }
        }
    }

}
