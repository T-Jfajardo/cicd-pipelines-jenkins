// Jenkinsfile test
//@Library('shared-lib-mule') _
//deployJob()

def logSeparator = "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"

def log(String message)
{
    echo "++++++++++++++++++++++++++ [ ${message} ]"
}

pipeline {
    agent any
    environment{
        gitBranchName = "master" //"${env.BRANCH_NAME}"
        gitUrl = 'git@github.com:username/test-pipeline-mule.git'       // changeit
    }
    stages 
    {
        stage('Start') {
            steps {
                log("START")
            }
        }

        stage ('Invoke Deploy Pipeline') {
            steps {
                build job: 'deployPipeline', parameters: [
                    [$class: 'StringParameterValue', name: 'applicationName', value: 'test-pipeline-muleapp'],    // changeit
                    [$class: 'StringParameterValue', name: 'assetVersion', value: 'v1'],                                // changeit
                    [$class: 'StringParameterValue', name: 'muleEnv', value: 'DEV'],                                    // changeit
                    [$class: 'StringParameterValue', name: 'cloudHubEnv', value: 'DEV'],                                // changeit
                    [$class: 'StringParameterValue', name: 'rtmVersion', value: '4.4.0'],                               // changeit
                    [$class: 'StringParameterValue', name: 'muleRegion', value: 'eu-west-1'],                           // changeit
                    [$class: 'StringParameterValue', name: 'workerCount', value: '1'],                                  // changeit
                    [$class: 'StringParameterValue', name: 'workerType', value: 'MICRO'],                               // changeit
                    [$class: 'StringParameterValue', name: 'muleBusinessGroup', value: '76e8161c-646d-4c97-a4b3-953ff3a0b'], // changeit
                    [$class: 'StringParameterValue', name: 'gitUrl', value: "${gitUrl}"],
                    [$class: 'StringParameterValue', name: 'gitBranchName', value: "${gitBranchName}"]
                ]
            }
        }

        stage('End') {
            steps{
                log("END")
            }
        }
    }
}
